#include "test.h"
#include "stdafx.h"
#include "targetver.h"
#include "CppUnitTest.h"
using namespace Microsoft::VisualStudio::CppUnitTestFramework;


namespace UnitTest1
{		
	TEST_CLASS(UnitTest1)
	{
	public:
		
		TEST_METHOD(TestMethod1)
		{
			FILE *fp;
			errno_t err;
			err = fopen_s(&fp, "四则运算.txt", "w");
			int testnum = 10;									//题目数量
			int maxnum = 100;									//最大数
			int length = 10;									//题目长度
			int symbol=4;										//运算符数
			int bracketsnum = 4;									//括号个数
			int littlenum = 0;									//小数个数
			int fileflag = 1;									//是否输出到文件
			//sc(maxnum, length, symbol, bracketsnum, littlenum, fileflag, fp);
			Assert::AreEqual(testnum, length);
			fclose(fp);
		}
		
		TEST_METHOD(TestMethod2)
		{
			FILE *fp;
			errno_t err;
			err = fopen_s(&fp, "四则运算.txt", "w");
			int testnum = 9;									//题目数量
			int maxnum = 200;									//最大数
			int length = 9;										//题目长度
			int symbol = 2;										//运算符数
			int bracketsnum = 2;									//括号个数
			int littlenum = 3;									//小数个数
			int fileflag = 0;									//是否输出到文件
			//sc(maxnum, length, symbol, bracketsnum, littlenum, fileflag, fp);
			Assert::AreEqual(testnum, length);
			fclose(fp);
		}
		
		TEST_METHOD(TestMethod3)
		{
			FILE *fp;
			errno_t err;
			err = fopen_s(&fp, "四则运算.txt", "w");
			int testnum = 20;									//题目数量
			int maxnum = 10;									//最大数
			int length = 20;									//题目长度
			int symbol = 0;										//运算符数
			int bracketsnum = 1;									//括号个数
			int littlenum = 1;									//小数个数
			int fileflag = 1;									//是否输出到文件
			//sc(maxnum, length, symbol, bracketsnum, littlenum, fileflag, fp);
			Assert::AreEqual(testnum, length);
			fclose(fp);
		}

	};
}
